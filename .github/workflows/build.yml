# TODO: Build automatically depending on commit type.
name: Build

env:
  TML_VERSION: 2023.06.25.31
  TML_SAVEDIR: ./

on: [push, pull_request]

jobs:

  build:
    strategy:
        matrix:
          configuration: [Debug, Release]

    if: ${{
        (startsWith(github.event.head_commit.message, 'feat')
        || startsWith(github.event.head_commit.message, 'fix')
        || startsWith(github.event.head_commit.message, 'chore')
        || startsWith(github.event.head_commit.message, 'build')
        || startsWith(github.event.head_commit.message, 'test')
        || startsWith(github.event.head_commit.message, 'refactor')
        || startsWith(github.event.head_commit.message, 'perf'))
        && contains(github.event.head_commit.message, ':')
      }}
    
    runs-on: windows-latest

    env:
      Solution_Name: UnnamedTechMod.sln
      # Test_Project_Path: your-test-project-path

    steps:
    
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download tModLoader
      run: |
        curl -sL "https://github.com/tModLoader/tModLoader/releases/download/v${{ env.TML_VERSION }}/tModLoader.zip" -o tModLoader.zip
        unzip tModLoader.zip -d ../tModLoader/
        rm tModLoader.zip

    - name: Create tModLoader.targets
      shell: bash
      run: |
        cat > ../tModLoader.targets << EOF
        <Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
          <Import Project="tModLoader/tMLMod.targets" />
        </Project>
        EOF

    - name: Build
      run: dotnet build UnnamedTechMod.sln --configuration ${{ matrix.configuration }}

    - name: Tree
      run: tree /f /a ../

    - name: Archive .tmod file
      uses: actions/upload-artifact@v3
      with:
        name: UnnamedTechMod.tmod (${{ matrix.configuration }})
        path: ./tModLoader/Mods/UnnamedTechMod.tmod
